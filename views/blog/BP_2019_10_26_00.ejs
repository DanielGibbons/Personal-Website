<%- include('../shared/_header.ejs', {viewData: viewData}) %>

<%- include('../shared/_blog-header.ejs', {blogData: blogData}) %>

<div class="blog-post-container">

	<h2 class="sub-title">Setup an Account with Microsoft Azure</h2>
	<ul>
		<li class="body-text">
			Go to the <a href="https://azure.microsoft.com/en-gb/">Azure Website</a> and setup a free account. You'll need this
			so that you can later use terraform to authenticate with your account to provision resources.
		</li>
	</ul>

	<h2 class="sub-title">Configure Dev Environment for Terraform</h2>
	<ul>
		<li class="body-text">
			Download the latest version of Terraform from the
			<a href="https://www.terraform.io/downloads.html">Terraform Website</a> and follow the installation instructions
			depending on your OS.
		</li>
		<li class="body-text">
			Once Terraform's installed make sure it's on your PATH. To check this run <code>terraform -v</code>
			from a shell of your choice. If you see <code>Command not found</code> you'll need to add the location of the
			Terraform binary to your PATH.
		</li>
		<li class="body-text">
			You'll also need a text editor. I'd recommend VS Code due to it having a range of extensions for Terraform which
			provide syntax highlighting and code snippets, but it's completely up to you.
		</li>
	</ul>

	<h2 class="sub-title">Authenticate Shell to link to Azure Subscription</h2>
	<ul>
		<li class="body-text">
			Install the latest Azure CLI from <a href="https://docs.microsoft.com/en-us/cli/azure/install-azure-cli?view=azure-cli-latest">here</a>
			and make sure it is on your PATH. The Azure CLI provides an API to interact with your Azure account. We'll be using
			it to authenticate your shell to allow Terraform to create and destroy your Azure account's resources.
		</li>
		<li class="body-text">
			Download and run the following bash script from the shell session you will be using with Terraform. The script will
			open a browser tab for you to login to your account. After logging in follow the instructions in the shell to set
			the Azure subscription you want Terraform to provision resources in.
		</li>
	</ul>

	<div class="download-file-container">
		<a href="/blogs/BP_19_10_26_00/azure-login.sh" download>
			<icon class="fas fa-file-code">
				<p class="filename">
					azure-login.sh
				</p>
			</icon>
		</a>
	</div>

	<h2 class="sub-title">Provision Resources using Terraform</h2>
	<ul>
		<li class="body-text">
			Download and extract <strong>terraform.zip</strong> to a directory of your choice.
		</li>
	</ul>
	<div class="download-file-container">
		<a href="/blogs/BP_19_10_26_00/terraform.zip" download>
			<icon class="fas fa-file-archive">
				<p class="filename">
					terraform.zip
				</p>
			</icon>
		</a>
	</div>
	<ul>
		<li class="body-text">
			Download and extract <strong>terraform.zip</strong> to a directory of your choice.
		</li>
		<li class="body-text">
			Using the shell you ran <strong>azure-login.sh</strong> from <code>cd</code> into the directory where <strong>terraform.zip</strong>
			was extracted. From here run <code>terraform plan</code> where you will see the resources Terraform has interpreted
			you want from reading the <strong>main.tf</strong> file.
		</li>
		<li class="body-text">
			Next run <code>terraform apply</code>. This will provision the resources outlined from the plan and you can see the
			resources by visiting the Azure Portal.
		</li>
	</ul>







</div>

<%- include('../shared/_footer.ejs') %>